{"ast":null,"code":"var _jsxFileName = \"/Users/weaponx/code/onthefly/onthefly1/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Button } from 'grommet';\nconst API_KEY = '6e630f7b-a0bb-41a9-ac2a-5b195704e848';\n\nconst constructApiCallUrl = (line1, line2, imageId) => \"http://version1.api.memegenerator.net//Instance_Create?languageCode=en&generatorID=45&imageID=\".concat(imageId, \"&text0=\").concat(line1, \"&text1=\").concat(line2, \"&apiKey=\").concat(API_KEY);\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      memeUrl: '',\n      line1: 'fancy pant',\n      line2: 'get lap dance',\n      imageId: 30\n    };\n\n    this.fetchMemeImage = async () => {\n      const _ref = await axios.get(constructApiCallUrl(this.state.line1, this.state.line2, this.state.imageId)),\n            instanceImageUrl = _ref.data.result.instanceImageUrl;\n\n      this.setState({\n        memeUrl: instanceImageUrl\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.fetchMemeImage();\n    };\n\n    this.handleClickNext = () => {\n      this.setState(({\n        imageId\n      }) => ({\n        imageId: imageId + 1\n      }), this.fetchMemeImage);\n    };\n\n    this.handleClickPrevious = () => {\n      this.setState(({\n        imageId\n      }) => ({\n        imageId: imageId - 1\n      }), this.fetchMemeImage);\n    };\n\n    this.handleSurpriseMe = () => {\n      this.setState({\n        imageId: getRandomIntInclusive(1, 500)\n      });\n      this.fetchMemeImage();\n    };\n\n    this.render = () => React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"button\",\n      label: \"previous\",\n      onClick: this.handleClickPrevious,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.state.memeUrl,\n      className: \"App-logo\",\n      alt: this.state.memeUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"button\",\n      label: \"next\",\n      onClick: this.handleClickNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSurpriseMe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"surprise me\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"line1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Edit Line One\", React.createElement(\"input\", {\n      name: \"line1\",\n      value: this.state.line1,\n      placeholder: \"line 1\",\n      onChange: event => this.setState({\n        line1: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \"Edit Line Two\", React.createElement(\"input\", {\n      value: this.state.line2,\n      placeholder: \"line 2\",\n      onChange: event => this.setState({\n        line2: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"the current image number \", this.state.imageId)));\n  }\n\n  componentDidMount() {\n    this.fetchMemeImage();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/weaponx/code/onthefly/onthefly1/src/App.js"],"names":["React","axios","Button","API_KEY","constructApiCallUrl","line1","line2","imageId","getRandomIntInclusive","min","max","Math","ceil","floor","random","App","Component","state","memeUrl","fetchMemeImage","get","instanceImageUrl","data","result","setState","handleSubmit","event","preventDefault","handleClickNext","handleClickPrevious","handleSurpriseMe","render","target","value","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport { Button } from 'grommet'\n\nconst API_KEY = '6e630f7b-a0bb-41a9-ac2a-5b195704e848'\n\nconst constructApiCallUrl = (line1, line2, imageId) =>\n  `http://version1.api.memegenerator.net//Instance_Create?languageCode=en&generatorID=45&imageID=${imageId}&text0=${line1}&text1=${line2}&apiKey=${API_KEY}`\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nclass App extends React.Component {\n  state = {\n    memeUrl: '',\n    line1: 'fancy pant',\n    line2: 'get lap dance',\n    imageId: 30\n  }\n\n  fetchMemeImage = async () => {\n    const {\n      data: {\n        result: { instanceImageUrl }\n      }\n    } = await axios.get(\n      constructApiCallUrl(\n        this.state.line1,\n        this.state.line2,\n        this.state.imageId\n      )\n    )\n    this.setState({ memeUrl: instanceImageUrl })\n  }\n  componentDidMount() {\n    this.fetchMemeImage()\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.fetchMemeImage()\n  }\n  handleClickNext = () => {\n    this.setState(\n      ({ imageId }) => ({ imageId: imageId + 1 }),\n      this.fetchMemeImage\n    )\n  }\n  handleClickPrevious = () => {\n    this.setState(\n      ({ imageId }) => ({ imageId: imageId - 1 }),\n      this.fetchMemeImage\n    )\n  }\n\n  handleSurpriseMe = () => {\n    this.setState({ imageId: getRandomIntInclusive(1, 500) })\n    this.fetchMemeImage()\n  }\n\n  render = () => (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"firstDiv\">\n          <Button\n            className=\"button\"\n            label=\"previous\"\n            onClick={this.handleClickPrevious}\n          />\n          <img\n            src={this.state.memeUrl}\n            className=\"App-logo\"\n            alt={this.state.memeUrl}\n          />\n          <Button\n            className=\"button\"\n            label=\"next\"\n            onClick={this.handleClickNext}\n          />\n        </div>\n\n        <button onClick={this.handleSurpriseMe}>surprise me</button>\n\n        <form>\n          <label htmlFor=\"line1\">\n            Edit Line One\n            <input\n              name=\"line1\"\n              value={this.state.line1}\n              placeholder=\"line 1\"\n              onChange={event => this.setState({ line1: event.target.value })}\n            />\n          </label>\n          <br />\n          Edit Line Two\n          <input\n            value={this.state.line2}\n            placeholder=\"line 2\"\n            onChange={event => this.setState({ line2: event.target.value })}\n          />\n          <br />\n          <button onClick={this.handleSubmit}>submit</button>\n        </form>\n        <p>the current image number {this.state.imageId}</p>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}